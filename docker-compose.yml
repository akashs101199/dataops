
services:
  postgres:
    image: postgres:15
    container_name: dataops_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "55432:5432"     # host:container (avoid local 5432 conflicts)
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 3s
      retries: 30

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: dataops_airflow_web
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__FERNET_KEY: "REPLACE_ME_WITH_VALID_FERNET_KEY"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    ports:
      - "18080:8080"
    command: >
      bash -lc "
        airflow db upgrade &&
        airflow users create
          --username admin
          --password admin
          --firstname Admin
          --lastname User
          --role Admin
          --email admin@example.com || true &&
        exec airflow webserver
      "

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: dataops_airflow_sched
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__FERNET_KEY: "_Jh7gGx0V7WS_U8nOe94XiHhfEy7qOLnCPHxnxAkMhU="
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
    command: bash -lc "airflow db upgrade && exec airflow scheduler"

  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    container_name: dataops_etl
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://airflow:airflow@postgres:5432/airflow
    restart: unless-stopped

  superset:
    image: apache/superset:3.1.0
    container_name: dataops_superset
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SUPERSET_SECRET_KEY: supersecret
      SUPERSET_DATABASE_URI: postgresql+psycopg2://airflow:airflow@postgres:5432/superset
      FLASK_ENV: production
    volumes:
      - ./superset/init.sh:/app/init.sh:ro
    ports:
      - "8088:8088"
    command: ["/bin/bash","-lc","/app/docker/docker-bootstrap.sh && /app/init.sh"]

volumes:
  pgdata:
